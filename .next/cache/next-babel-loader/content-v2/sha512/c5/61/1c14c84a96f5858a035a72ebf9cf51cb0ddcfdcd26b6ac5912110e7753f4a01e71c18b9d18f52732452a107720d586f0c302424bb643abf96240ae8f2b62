{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jimhartford/Code/jibrilhartford-github/components/Header/Header.js\";\nimport React from \"react\";\nimport Link from \"next/link\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\";\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport styles from \"styles/jss/nextjs-material-kit-pro/components/headerStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function Header(props) {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const classes = useStyles();\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const headerColorChange = () => {\n    const {\n      color,\n      changeColorOnScroll\n    } = props;\n    const windowsScrollTop = window.pageYOffset;\n\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n\n  const {\n    color,\n    links,\n    brand,\n    fixed,\n    absolute\n  } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  });\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: appBarClasses,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/presentation\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        smDown: true,\n        implementation: \"css\",\n        className: classes.hidden,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.collapse,\n          children: links\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        mdUp: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerToggle,\n          children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      mdUp: true,\n      implementation: \"js\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"temporary\",\n        anchor: \"right\",\n        open: mobileOpen,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        onClose: handleDrawerToggle,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerToggle,\n          className: classes.closeButtonDrawer,\n          children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.appResponsive,\n          children: links\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\nHeader.defaultProp = {\n  color: \"white\"\n};\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]),\n  links: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]).isRequired\n  })\n};","map":{"version":3,"sources":["/Users/jimhartford/Code/jibrilhartford-github/components/Header/Header.js"],"names":["React","Link","classNames","PropTypes","makeStyles","AppBar","Toolbar","IconButton","Button","Hidden","Drawer","Menu","Close","styles","useStyles","Header","props","mobileOpen","setMobileOpen","useState","classes","useEffect","changeColorOnScroll","window","addEventListener","headerColorChange","cleanup","removeEventListener","handleDrawerToggle","color","windowsScrollTop","pageYOffset","height","document","body","getElementsByTagName","classList","remove","add","links","brand","fixed","absolute","appBarClasses","appBar","container","title","hidden","collapse","paper","drawerPaper","closeButtonDrawer","appResponsive","defaultProp","propTypes","oneOf","node","string","bool","shape","number","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8DAAnB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAACS,MAAD,CAA5B;AAEA,eAAe,SAASE,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAApC;AACA,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACAd,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,QAAIL,KAAK,CAACM,mBAAV,EAA+B;AAC7BC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,iBAAlC;AACD;;AACD,WAAO,SAASC,OAAT,GAAmB;AACxB,UAAIV,KAAK,CAACM,mBAAV,EAA+B;AAC7BC,QAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,iBAArC;AACD;AACF,KAJD;AAKD,GATD;;AAUA,QAAMG,kBAAkB,GAAG,MAAM;AAC/BV,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAGA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9B,UAAM;AAAEI,MAAAA,KAAF;AAASP,MAAAA;AAAT,QAAiCN,KAAvC;AAEA,UAAMc,gBAAgB,GAAGP,MAAM,CAACQ,WAAhC;;AACA,QAAID,gBAAgB,GAAGR,mBAAmB,CAACU,MAA3C,EAAmD;AACjDC,MAAAA,QAAQ,CAACC,IAAT,CACGC,oBADH,CACwB,QADxB,EACkC,CADlC,EAEGC,SAFH,CAEaC,MAFb,CAEoBjB,OAAO,CAACS,KAAD,CAF3B;AAGAI,MAAAA,QAAQ,CAACC,IAAT,CACGC,oBADH,CACwB,QADxB,EACkC,CADlC,EAEGC,SAFH,CAEaE,GAFb,CAEiBlB,OAAO,CAACE,mBAAmB,CAACO,KAArB,CAFxB;AAGD,KAPD,MAOO;AACLI,MAAAA,QAAQ,CAACC,IAAT,CACGC,oBADH,CACwB,QADxB,EACkC,CADlC,EAEGC,SAFH,CAEaE,GAFb,CAEiBlB,OAAO,CAACS,KAAD,CAFxB;AAGAI,MAAAA,QAAQ,CAACC,IAAT,CACGC,oBADH,CACwB,QADxB,EACkC,CADlC,EAEGC,SAFH,CAEaC,MAFb,CAEoBjB,OAAO,CAACE,mBAAmB,CAACO,KAArB,CAF3B;AAGD;AACF,GAnBD;;AAoBA,QAAM;AAAEA,IAAAA,KAAF;AAASU,IAAAA,KAAT;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,MAA2C1B,KAAjD;AACA,QAAM2B,aAAa,GAAGzC,UAAU,CAAC;AAC/B,KAACkB,OAAO,CAACwB,MAAT,GAAkB,IADa;AAE/B,KAACxB,OAAO,CAACS,KAAD,CAAR,GAAkBA,KAFa;AAG/B,KAACT,OAAO,CAACsB,QAAT,GAAoBA,QAHW;AAI/B,KAACtB,OAAO,CAACqB,KAAT,GAAiBA;AAJc,GAAD,CAAhC;AAMA,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAEE,aAAnB;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEvB,OAAO,CAACyB,SAA5B;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,KAA3B;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,eAAX;AAAA,iCACE;AAAA,sBAAIN;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,cAAc,EAAC,KAA9B;AAAoC,QAAA,SAAS,EAAEpB,OAAO,CAAC2B,MAAvD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAE3B,OAAO,CAAC4B,QAAxB;AAAA,oBAAmCT;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,wBAAW,aAFb;AAGE,UAAA,OAAO,EAAEX,kBAHX;AAAA,iCAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAa,MAAA,cAAc,EAAC,IAA5B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,MAAM,EAAE,OAFV;AAGE,QAAA,IAAI,EAAEX,UAHR;AAIE,QAAA,OAAO,EAAE;AACPgC,UAAAA,KAAK,EAAE7B,OAAO,CAAC8B;AADR,SAJX;AAOE,QAAA,OAAO,EAAEtB,kBAPX;AAAA,gCASE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,wBAAW,aAFb;AAGE,UAAA,OAAO,EAAEA,kBAHX;AAIE,UAAA,SAAS,EAAER,OAAO,CAAC+B,iBAJrB;AAAA,iCAME,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE;AAAK,UAAA,SAAS,EAAE/B,OAAO,CAACgC,aAAxB;AAAA,oBAAwCb;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;AAEDxB,MAAM,CAACsC,WAAP,GAAqB;AACnBxB,EAAAA,KAAK,EAAE;AADY,CAArB;AAIAd,MAAM,CAACuC,SAAP,GAAmB;AACjBzB,EAAAA,KAAK,EAAE1B,SAAS,CAACoD,KAAV,CAAgB,CACrB,SADqB,EAErB,MAFqB,EAGrB,SAHqB,EAIrB,SAJqB,EAKrB,QALqB,EAMrB,aANqB,EAOrB,OAPqB,EAQrB,MARqB,EASrB,MATqB,CAAhB,CADU;AAYjBhB,EAAAA,KAAK,EAAEpC,SAAS,CAACqD,IAZA;AAajBhB,EAAAA,KAAK,EAAErC,SAAS,CAACsD,MAbA;AAcjBhB,EAAAA,KAAK,EAAEtC,SAAS,CAACuD,IAdA;AAejBhB,EAAAA,QAAQ,EAAEvC,SAAS,CAACuD,IAfH;AAgBjB;AACA;AACA;AACA;AACA;AACA;AACApC,EAAAA,mBAAmB,EAAEnB,SAAS,CAACwD,KAAV,CAAgB;AACnC3B,IAAAA,MAAM,EAAE7B,SAAS,CAACyD,MAAV,CAAiBC,UADU;AAEnChC,IAAAA,KAAK,EAAE1B,SAAS,CAACoD,KAAV,CAAgB,CACrB,SADqB,EAErB,MAFqB,EAGrB,SAHqB,EAIrB,SAJqB,EAKrB,QALqB,EAMrB,aANqB,EAOrB,OAPqB,EAQrB,MARqB,EASrB,MATqB,CAAhB,EAUJM;AAZgC,GAAhB;AAtBJ,CAAnB","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"styles/jss/nextjs-material-kit-pro/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const classes = useStyles();\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const headerColorChange = () => {\n    const { color, changeColorOnScroll } = props;\n\n    const windowsScrollTop = window.pageYOffset;\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n  const { color, links, brand, fixed, absolute } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed,\n  });\n  return (\n    <AppBar className={appBarClasses}>\n      <Toolbar className={classes.container}>\n        <Button className={classes.title}>\n          <Link href=\"/presentation\">\n            <a>{brand}</a>\n          </Link>\n        </Button>\n        <Hidden smDown implementation=\"css\" className={classes.hidden}>\n          <div className={classes.collapse}>{links}</div>\n        </Hidden>\n        <Hidden mdUp>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n      <Hidden mdUp implementation=\"js\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={\"right\"}\n          open={mobileOpen}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          onClose={handleDrawerToggle}\n        >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n            className={classes.closeButtonDrawer}\n          >\n            <Close />\n          </IconButton>\n          <div className={classes.appResponsive}>{links}</div>\n        </Drawer>\n      </Hidden>\n    </AppBar>\n  );\n}\n\nHeader.defaultProp = {\n  color: \"white\",\n};\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"transparent\",\n    \"white\",\n    \"rose\",\n    \"dark\",\n  ]),\n  links: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"danger\",\n      \"transparent\",\n      \"white\",\n      \"rose\",\n      \"dark\",\n    ]).isRequired,\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}