{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/jimhartford/Code/jibrilhartford-github/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jimhartford/Code/jibrilhartford-github/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\"; // import Card from \"@material-ui/core/Card\";\n// import CardContent from \"@material-ui/core/Card/CardContent\";\n// import CardHeader from \"@material-ui/core/Card/CardHeader\";\n\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; // core components\n\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport styles from \"styles/jss/nextjs-material-kit-pro/components/customTabsStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomTabs(props) {\n  var _classNames, _classNames2;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, value) {\n    setValue(value);\n  };\n\n  var headerColor = props.headerColor,\n      title = props.title,\n      tabs = props.tabs,\n      rtlActive = props.rtlActive,\n      plainTabs = props.plainTabs;\n  var classes = useStyles();\n  var cardTitle = classNames((_classNames = {}, _defineProperty(_classNames, classes.cardTitle, true), _defineProperty(_classNames, classes.cardTitleRTL, rtlActive), _classNames));\n  var tabsContainer = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.tabsContainer, true), _defineProperty(_classNames2, classes.tabsContainerRTL, rtlActive), _classNames2));\n  return /*#__PURE__*/_jsxs(Card, {\n    plain: plainTabs,\n    children: [/*#__PURE__*/_jsxs(CardHeader, {\n      color: headerColor,\n      plain: plainTabs,\n      children: [title !== undefined ? /*#__PURE__*/_jsx(\"div\", {\n        className: cardTitle,\n        children: \"title\"\n      }) : null, /*#__PURE__*/_jsx(Tabs, {\n        classes: {\n          root: classes.customTabsRoot,\n          flexContainer: tabsContainer,\n          indicator: classes.displayNone\n        },\n        value: value,\n        onChange: handleChange,\n        textColor: \"inherit\",\n        children: tabs.map(function (prop, key) {\n          var icon = {};\n\n          if (prop.tabIcon !== undefined) {\n            icon = {\n              icon: /*#__PURE__*/_jsx(prop.tabIcon, {\n                className: classes.tabIcon\n              })\n            };\n          } else {\n            icon = {};\n          }\n\n          return /*#__PURE__*/_jsx(Tab, _objectSpread(_objectSpread({\n            classes: {\n              root: classes.customTabRoot,\n              selected: classes.customTabSelected,\n              wrapper: classes.customTabWrapper\n            } // icon={<prop.tabIcon className={tabIcon} />}\n\n          }, icon), {}, {\n            label: prop.tabName\n          }), key);\n        })\n      })]\n    }), /*#__PURE__*/_jsx(CardBody, {\n      children: tabs.map(function (prop, key) {\n        if (key === value) {\n          return /*#__PURE__*/_jsx(\"div\", {\n            children: prop.tabContent\n          }, key);\n        }\n\n        return null;\n      })\n    })]\n  });\n}\nCustomTabs.defaultProps = {\n  headerColor: \"purple\"\n};","map":null,"metadata":{},"sourceType":"module"}