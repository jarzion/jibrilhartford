{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/Users/jimhartford/Code/jibrilhartford-github/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/jimhartford/Code/jibrilhartford-github/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\"; // nodejs library to set properties for components\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\"; // @material-ui/icons\n\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport styles from \"styles/jss/nextjs-material-kit-pro/components/accordionStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomAccordion(props) {\n  var _React$useState = React.useState(props.active.length === undefined ? [props.active] : props.active),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      active = _React$useState2[0],\n      setActive = _React$useState2[1];\n\n  var _React$useState3 = React.useState(props.active.length === undefined ? true : false),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      single = _React$useState4[0];\n\n  var handleChange = function handleChange(panel) {\n    return function () {\n      var newArray;\n\n      if (single) {\n        if (active[0] === panel) {\n          newArray = [];\n        } else {\n          newArray = [panel];\n        }\n      } else {\n        if (active.indexOf(panel) === -1) {\n          newArray = [].concat(_toConsumableArray(active), [panel]);\n        } else {\n          newArray = _toConsumableArray(active);\n          newArray.splice(active.indexOf(panel), 1);\n        }\n      }\n\n      setActive(newArray);\n    };\n  };\n\n  var collapses = props.collapses,\n      activeColor = props.activeColor;\n  var classes = useStyles();\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: collapses.map(function (prop, key) {\n      return /*#__PURE__*/_jsxs(Accordion, {\n        expanded: active === key || active.indexOf(key) !== -1,\n        onChange: handleChange(key),\n        classes: {\n          root: classes.accordion,\n          expanded: classes.accordionExpanded\n        },\n        children: [/*#__PURE__*/_jsx(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsx(ExpandMore, {}),\n          classes: {\n            root: \"\".concat(classes.accordionSummary, \" \").concat(classes[activeColor + \"AccordionSummary\"]),\n            expanded: \"\".concat(classes.accordionSummaryExpaned, \" \").concat(classes[activeColor + \"AccordionSummaryExpaned\"]),\n            content: classes.accordionSummaryContent,\n            expandIcon: classes.accordionSummaryExpandIcon\n          },\n          children: /*#__PURE__*/_jsx(\"h4\", {\n            className: classes.title,\n            children: prop.title\n          })\n        }), /*#__PURE__*/_jsx(AccordionDetails, {\n          className: classes.accordionDetails,\n          children: prop.content\n        })]\n      }, key);\n    })\n  });\n}\nCustomAccordion.defaultProps = {\n  active: -1,\n  activeColor: \"primary\"\n};","map":null,"metadata":{},"sourceType":"module"}