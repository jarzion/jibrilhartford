{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // used for making the prop types of this component\n\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\nexport default function ImageUpload(props) {\n  const [file, setFile] = React.useState(null);\n  const [imagePreviewUrl, setImagePreviewUrl] = React.useState(props.avatar ? \"/img/placeholder.jpg\" : \"/img/image_placeholder.jpg\");\n  let fileInput = /*#__PURE__*/React.createRef();\n\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      setFile(file);\n      setImagePreviewUrl(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  }; // eslint-disable-next-line\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // file is the file/image uploaded\n    // in this function you can save the image (file) on form submit\n    // you have to call it yourself\n  };\n\n  const handleClick = () => {\n    fileInput.current.click();\n  };\n\n  const handleRemove = () => {\n    setFile(null);\n    setImagePreviewUrl(props.avatar ? \"/img/placeholder.jpg\" : \"/img/image_placeholder.jpg\");\n    fileInput.current.value = null;\n  };\n\n  let {\n    avatar,\n    addButtonProps,\n    changeButtonProps,\n    removeButtonProps\n  } = props;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"fileinput text-center\",\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange,\n      ref: fileInput\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"thumbnail\" + (avatar ? \" img-circle\" : \"\"),\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: imagePreviewUrl,\n        alt: \"...\"\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: file === null ? /*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({}, addButtonProps), {}, {\n        onClick: () => handleClick(),\n        children: avatar ? \"Add Photo\" : \"Select image\"\n      })) : /*#__PURE__*/_jsxs(\"span\", {\n        children: [/*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({}, changeButtonProps), {}, {\n          onClick: () => handleClick(),\n          children: \"Change\"\n        })), avatar ? /*#__PURE__*/_jsx(\"br\", {}) : null, /*#__PURE__*/_jsxs(Button, _objectSpread(_objectSpread({}, removeButtonProps), {}, {\n          onClick: () => handleRemove(),\n          children: [/*#__PURE__*/_jsx(\"i\", {\n            className: \"fas fa-times\"\n          }), \" Remove\"]\n        }))]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}