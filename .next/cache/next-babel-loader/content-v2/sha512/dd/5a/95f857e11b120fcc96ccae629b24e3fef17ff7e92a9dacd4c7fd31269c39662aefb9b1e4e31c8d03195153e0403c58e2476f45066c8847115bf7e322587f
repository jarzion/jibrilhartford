{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport Link from \"next/link\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\";\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport styles from \"styles/jss/nextjs-material-kit-pro/components/headerStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function Header(props) {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const classes = useStyles();\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const headerColorChange = () => {\n    const {\n      color,\n      changeColorOnScroll\n    } = props;\n    const windowsScrollTop = window.pageYOffset;\n\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n\n  const {\n    color,\n    links,\n    brand,\n    fixed,\n    absolute\n  } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  });\n  return /*#__PURE__*/_jsxs(AppBar, {\n    className: appBarClasses,\n    children: [/*#__PURE__*/_jsxs(Toolbar, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsx(Button, {\n        className: classes.title,\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/presentation\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: brand\n          })\n        })\n      }), /*#__PURE__*/_jsx(Hidden, {\n        smDown: true,\n        implementation: \"css\",\n        className: classes.hidden,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: classes.collapse,\n          children: links\n        })\n      }), /*#__PURE__*/_jsx(Hidden, {\n        mdUp: true,\n        children: /*#__PURE__*/_jsx(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerToggle,\n          children: /*#__PURE__*/_jsx(Menu, {})\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Hidden, {\n      mdUp: true,\n      implementation: \"js\",\n      children: /*#__PURE__*/_jsxs(Drawer, {\n        variant: \"temporary\",\n        anchor: \"right\",\n        open: mobileOpen,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        onClose: handleDrawerToggle,\n        children: [/*#__PURE__*/_jsx(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerToggle,\n          className: classes.closeButtonDrawer,\n          children: /*#__PURE__*/_jsx(Close, {})\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classes.appResponsive,\n          children: links\n        })]\n      })\n    })]\n  });\n}\nHeader.defaultProp = {\n  color: \"white\"\n};","map":null,"metadata":{},"sourceType":"module"}